name: keppel-4
on:
  repository_dispatch:
    types:
      - manual-trigger
      - manual-trigger-keppel
      - manual-trigger-keppel-4
  schedule:
    - cron: '15 7 * * *'
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: checkout this repo
        uses: actions/checkout@master
        with:
          path: main
      - name: checkout keppel
        uses: actions/checkout@master
        with:
          path: keppel
          repository: anuvu/keppel
      - name: start keppel server
        run: |
          cd ./keppel
          IP=`hostname -I | awk '{print $1}'`
          echo "::set-env name=OCI_ROOT_URL::http://${IP}:5000"
          KEPPEL_REF="local-keppel:v$(date +%Y%m%d%H%M%S)"
          docker build -t "${KEPPEL_REF}" .
          docker run --name some-postgres -e POSTGRES_USERNAME=postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres
          openssl genrsa -out ./privkey.pem 4096
          docker run --rm -it -v $(pwd)/privkey.pem:/privkey.pem -e KEPPEL_API_PUBLIC_URL="http://localhost:5000" \
            -e KEPPEL_DB_URI="postgresql://postgres:mysecretpassword@172.17.0.2?sslmode=disable" \
            -e KEPPEL_DRIVER_AUTH=keystone \
            -e KEPPEL_DRIVER_FEDERATION=trivial \
            -e KEPPEL_DRIVER_STORAGE=in-memory-for-testing \
            -e KEPPEL_ISSUER_KEY=/privkey.pem \
            -e KEPPEL_OSLO_POLICY_PATH=/tmp/example-policy.json \
            -e OS_AUTH_URL=localhost \
            -e OS_PROJECT_NAME=oci \
            -e OS_USERNAME=oci \
            -e OS_PASSWORD=password \
            -d local_keppel:git server api
      - name: Run OCI Distribution Spec conformance tests
        uses: opencontainers/distribution-spec@master
        env:
          OCI_ROOT_URL: ${{ env.OCI_ROOT_URL }}
          OCI_NAMESPACE: oci-conformance/distribution-test
          OCI_TEST_CONTENT_MANAGEMENT: 1
          OCI_HIDE_SKIPPED_WORKFLOWS: 1
      - name: Upload test report to S3
        run: aws s3 cp --acl public-read report.html s3://oci-conformance/distribution-spec/keppel/content-management/report.html
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_ACCESS_AWS_SECRET_ACCESS_KEY }}
